# -*- coding: utf-8 -*-
"""Preprocesssing_in_Meachin_learning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XUQRz30cnR6QkFHoku-RLr6Pt2zRbyFP
"""

import numpy as np

import pandas as pd
data=pd.read_csv('/content/drive/MyDrive/preprocessing_dataset.csv')

data.head()

data.info()

data.isnull().sum()

!pip install missingno

import missingno as msno
msno.bar(data)

msno.matrix(data)

import seaborn as sns

sns.heatmap(data.isnull(),cbar=False,cmap='viridis')

# data.dropna(inplace=True)
data

data['Salary'].fillna(data['Salary'].mean(),inplace=True)
data

data['Age'].fillna(data['Age'].median(),inplace=True)

data['Gender'].fillna(data['Gender'].mode()[0],inplace=True)

data

from sklearn.impute import SimpleImputer
imp=SimpleImputer(strategy='median')
data[['Age']]=imp.fit_transform(data[['Age']])

data

sns.boxplot(data['Age'])

Q1=data['Age'].quantile(0.25)
Q3=data['Age'].quantile(0.75)
IQR=Q3-Q1

lower_bound=Q1-1.5*IQR
upper_bound=Q3+1.5*IQR

outlier=data[(data['Age']<lower_bound)|(data['Age']>upper_bound)]

outlier

from scipy.stats import zscore
z_score=zscore(data['Age'])
data[np.abs(z_score)>2.5]



# from sklearn.preprocessing import LabelEncoder
# le=LabelEncoder()
# data['Gender encoded']=le.fit_transform(data['Gender'])

data=pd.get_dummies(data,columns=['Department'])

data

# from sklearn.preprocessing import OneHotEncoder
# ohe=OneHotEncoder(sparse_output=False)
# data=ohe.fit_transform(data[['Department']])
# data

from sklearn.preprocessing import StandardScaler

sc=StandardScaler()
data['Age']=sc.fit_transform(data[['Age']])
data['Salary']=sc.fit_transform(data[['Salary']])

data

from sklearn.preprocessing import MinMaxScaler
minmax=MinMaxScaler()

data['Age']=minmax.fit_transform(data[['Age']])
data['Salary']=minmax.fit_transform(data[['Salary']])

data